// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0, 0, 0, 0, 0, 0, 0] if sel == 000
 *                            [0, in, 0, 0, 0, 0, 0, 0] if sel == 001
 *                            ...
 *                            [0, 0, 0, 0, 0, 0, 0, in] if sel == 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not(in = sel[0] , out = nsel);
	Not(in = sel[1] , out = nsel2);
	Not(in = sel[2] , out = nsel3);
	And(a = nsel , b = nsel2 , out = a1);
	And(a = a1 , b = nsel3 , out = a2);
	And(a = a2 , b = in , out = a);
	And(a = sel[0] , b = nsel2 , out = b1);
	And(a = b1 , b = nsel3 , out = b2);
	And(a = in , b = b2 , out = b);
	And(a = nsel , b = sel[1] , out = c1);
	And(a = c1 , b = nsel3 , out = c2);
	And(a = c2 , b = in , out = c);
	And(a = sel[0] , b = sel[1] , out = d1);
	And(a = d1 , b = nsel3 , out = d2);
	And(a = d2 , b = in , out = d);
	And(a = nsel , b = nsel2 , out = e1);
	And(a = e1 , b = sel[2] , out = e2);
	And(a = e2 , b = in , out = e);
	And(a = sel[0] , b = nsel2 , out = f1);
	And(a = f1 , b = sel[2] , out = f2);
	And(a = f2 , b = in , out = f);
	And(a = nsel , b = sel[1] , out = g1);
	And(a = g1 , b = sel[2] , out = g2);
	And(a = g2 , b = in , out = g);
	And(a = sel[0] , b = sel[1] , out = h1);
	And(a = h1 , b = sel[2] , out = h2);
	And(a = h2 , b = in , out = h);
}